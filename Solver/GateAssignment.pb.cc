// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateAssignment.proto

#include "GateAssignment.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GateAssignment_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAssignment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAssignment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Interval;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAssignment_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Airport;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAssignment_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Flight;
}  // namespace protobuf_GateAssignment_2eproto
namespace pb {
class GateAssignment_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateAssignment_Input>
      _instance;
} _GateAssignment_Input_default_instance_;
class GateAssignment_OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateAssignment_Output>
      _instance;
} _GateAssignment_Output_default_instance_;
class GateAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateAssignment>
      _instance;
} _GateAssignment_default_instance_;
class AirportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Airport>
      _instance;
} _Airport_default_instance_;
class GateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Gate>
      _instance;
} _Gate_default_instance_;
class FlightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Flight>
      _instance;
} _Flight_default_instance_;
class IntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Interval>
      _instance;
} _Interval_default_instance_;
class SubmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Submission>
      _instance;
} _Submission_default_instance_;
}  // namespace pb
namespace protobuf_GateAssignment_2eproto {
static void InitDefaultsGateAssignment_Input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GateAssignment_Input_default_instance_;
    new (ptr) ::pb::GateAssignment_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GateAssignment_Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GateAssignment_Input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGateAssignment_Input}, {
      &protobuf_GateAssignment_2eproto::scc_info_Airport.base,
      &protobuf_GateAssignment_2eproto::scc_info_Flight.base,}};

static void InitDefaultsGateAssignment_Output() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GateAssignment_Output_default_instance_;
    new (ptr) ::pb::GateAssignment_Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GateAssignment_Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateAssignment_Output =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateAssignment_Output}, {}};

static void InitDefaultsGateAssignment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GateAssignment_default_instance_;
    new (ptr) ::pb::GateAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GateAssignment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateAssignment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateAssignment}, {}};

static void InitDefaultsAirport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Airport_default_instance_;
    new (ptr) ::pb::Airport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Airport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Airport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAirport}, {
      &protobuf_GateAssignment_2eproto::scc_info_Gate.base,}};

static void InitDefaultsGate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Gate_default_instance_;
    new (ptr) ::pb::Gate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Gate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Gate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGate}, {}};

static void InitDefaultsFlight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Flight_default_instance_;
    new (ptr) ::pb::Flight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Flight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Flight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFlight}, {
      &protobuf_GateAssignment_2eproto::scc_info_Interval.base,}};

static void InitDefaultsInterval() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Interval_default_instance_;
    new (ptr) ::pb::Interval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Interval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Interval =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInterval}, {}};

static void InitDefaultsSubmission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Submission_default_instance_;
    new (ptr) ::pb::Submission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Submission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Submission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubmission}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GateAssignment_Input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateAssignment_Output.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateAssignment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Airport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Gate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Flight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Interval.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Submission.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateAssignment_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateAssignment_Input, airport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateAssignment_Input, flights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateAssignment_Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateAssignment_Output, assignments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GateAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Airport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Airport, gates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Airport, bridgenum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Gate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Gate, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Gate, mingap_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Flight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Flight, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Flight, turnaround_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Flight, incompatiblegates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Interval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Interval, begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Interval, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, ram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, compiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, date_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::GateAssignment_Input)},
  { 7, -1, sizeof(::pb::GateAssignment_Output)},
  { 13, -1, sizeof(::pb::GateAssignment)},
  { 18, -1, sizeof(::pb::Airport)},
  { 25, -1, sizeof(::pb::Gate)},
  { 32, -1, sizeof(::pb::Flight)},
  { 40, -1, sizeof(::pb::Interval)},
  { 47, -1, sizeof(::pb::Submission)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GateAssignment_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GateAssignment_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GateAssignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Airport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Gate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Flight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Interval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Submission_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GateAssignment.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024GateAssignment.proto\022\002pb\"s\n\016GateAssign"
      "ment\032B\n\005Input\022\034\n\007airport\030\001 \001(\0132\013.pb.Airp"
      "ort\022\033\n\007flights\030\002 \003(\0132\n.pb.Flight\032\035\n\006Outp"
      "ut\022\023\n\013assignments\030\001 \003(\005\"5\n\007Airport\022\027\n\005ga"
      "tes\030\001 \003(\0132\010.pb.Gate\022\021\n\tbridgeNum\030\002 \001(\005\"\""
      "\n\004Gate\022\n\n\002id\030\001 \001(\005\022\016\n\006minGap\030\002 \001(\005\"Q\n\006Fl"
      "ight\022\n\n\002id\030\001 \001(\005\022 \n\nturnaround\030\002 \001(\0132\014.p"
      "b.Interval\022\031\n\021incompatibleGates\030\003 \003(\005\"&\n"
      "\010Interval\022\r\n\005begin\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"\350\001"
      "\n\nSubmission\022\016\n\006author\030\001 \001(\t\022\021\n\talgorith"
      "m\030\002 \001(\t\022\016\n\006thread\030\003 \001(\t\022\013\n\003cpu\030\004 \001(\t\022\013\n\003"
      "ram\030\005 \001(\t\022\020\n\010language\030\006 \001(\t\022\020\n\010compiler\030"
      "\007 \001(\t\022\n\n\002os\030\010 \001(\t\022\017\n\007problem\030\025 \001(\t\022\020\n\010in"
      "stance\030\026 \001(\t\022\020\n\010duration\030\027 \001(\t\022\013\n\003obj\030\037 "
      "\001(\001\022\r\n\005email\030  \001(\t\022\014\n\004date\030! \001(\tB\025\n\002pbB\017"
      "GateAssignmentsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 623);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateAssignment.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GateAssignment_2eproto
namespace pb {

// ===================================================================

void GateAssignment_Input::InitAsDefaultInstance() {
  ::pb::_GateAssignment_Input_default_instance_._instance.get_mutable()->airport_ = const_cast< ::pb::Airport*>(
      ::pb::Airport::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateAssignment_Input::kAirportFieldNumber;
const int GateAssignment_Input::kFlightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateAssignment_Input::GateAssignment_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_GateAssignment_Input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GateAssignment.Input)
}
GateAssignment_Input::GateAssignment_Input(const GateAssignment_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      flights_(from.flights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_airport()) {
    airport_ = new ::pb::Airport(*from.airport_);
  } else {
    airport_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.GateAssignment.Input)
}

void GateAssignment_Input::SharedCtor() {
  airport_ = NULL;
}

GateAssignment_Input::~GateAssignment_Input() {
  // @@protoc_insertion_point(destructor:pb.GateAssignment.Input)
  SharedDtor();
}

void GateAssignment_Input::SharedDtor() {
  if (this != internal_default_instance()) delete airport_;
}

void GateAssignment_Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateAssignment_Input::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateAssignment_Input& GateAssignment_Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_GateAssignment_Input.base);
  return *internal_default_instance();
}


void GateAssignment_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GateAssignment.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flights_.Clear();
  if (GetArenaNoVirtual() == NULL && airport_ != NULL) {
    delete airport_;
  }
  airport_ = NULL;
  _internal_metadata_.Clear();
}

bool GateAssignment_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GateAssignment.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Airport airport = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_airport()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.Flight flights = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GateAssignment.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GateAssignment.Input)
  return false;
#undef DO_
}

void GateAssignment_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GateAssignment.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Airport airport = 1;
  if (this->has_airport()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_airport(), output);
  }

  // repeated .pb.Flight flights = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flights_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->flights(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GateAssignment.Input)
}

::google::protobuf::uint8* GateAssignment_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GateAssignment.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Airport airport = 1;
  if (this->has_airport()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_airport(), deterministic, target);
  }

  // repeated .pb.Flight flights = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flights_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->flights(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GateAssignment.Input)
  return target;
}

size_t GateAssignment_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GateAssignment.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.Flight flights = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->flights_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flights(static_cast<int>(i)));
    }
  }

  // .pb.Airport airport = 1;
  if (this->has_airport()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *airport_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateAssignment_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GateAssignment.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const GateAssignment_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateAssignment_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GateAssignment.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GateAssignment.Input)
    MergeFrom(*source);
  }
}

void GateAssignment_Input::MergeFrom(const GateAssignment_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GateAssignment.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flights_.MergeFrom(from.flights_);
  if (from.has_airport()) {
    mutable_airport()->::pb::Airport::MergeFrom(from.airport());
  }
}

void GateAssignment_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GateAssignment.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateAssignment_Input::CopyFrom(const GateAssignment_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GateAssignment.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateAssignment_Input::IsInitialized() const {
  return true;
}

void GateAssignment_Input::Swap(GateAssignment_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateAssignment_Input::InternalSwap(GateAssignment_Input* other) {
  using std::swap;
  CastToBase(&flights_)->InternalSwap(CastToBase(&other->flights_));
  swap(airport_, other->airport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateAssignment_Input::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateAssignment_Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateAssignment_Output::kAssignmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateAssignment_Output::GateAssignment_Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_GateAssignment_Output.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GateAssignment.Output)
}
GateAssignment_Output::GateAssignment_Output(const GateAssignment_Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      assignments_(from.assignments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.GateAssignment.Output)
}

void GateAssignment_Output::SharedCtor() {
}

GateAssignment_Output::~GateAssignment_Output() {
  // @@protoc_insertion_point(destructor:pb.GateAssignment.Output)
  SharedDtor();
}

void GateAssignment_Output::SharedDtor() {
}

void GateAssignment_Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateAssignment_Output::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateAssignment_Output& GateAssignment_Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_GateAssignment_Output.base);
  return *internal_default_instance();
}


void GateAssignment_Output::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GateAssignment.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assignments_.Clear();
  _internal_metadata_.Clear();
}

bool GateAssignment_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GateAssignment.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 assignments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_assignments())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_assignments())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GateAssignment.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GateAssignment.Output)
  return false;
#undef DO_
}

void GateAssignment_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GateAssignment.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 assignments = 1;
  if (this->assignments_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _assignments_cached_byte_size_));
  }
  for (int i = 0, n = this->assignments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->assignments(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GateAssignment.Output)
}

::google::protobuf::uint8* GateAssignment_Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GateAssignment.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 assignments = 1;
  if (this->assignments_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _assignments_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->assignments_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GateAssignment.Output)
  return target;
}

size_t GateAssignment_Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GateAssignment.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 assignments = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->assignments_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _assignments_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateAssignment_Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GateAssignment.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const GateAssignment_Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateAssignment_Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GateAssignment.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GateAssignment.Output)
    MergeFrom(*source);
  }
}

void GateAssignment_Output::MergeFrom(const GateAssignment_Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GateAssignment.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assignments_.MergeFrom(from.assignments_);
}

void GateAssignment_Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GateAssignment.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateAssignment_Output::CopyFrom(const GateAssignment_Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GateAssignment.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateAssignment_Output::IsInitialized() const {
  return true;
}

void GateAssignment_Output::Swap(GateAssignment_Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateAssignment_Output::InternalSwap(GateAssignment_Output* other) {
  using std::swap;
  assignments_.InternalSwap(&other->assignments_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateAssignment_Output::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateAssignment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateAssignment::GateAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_GateAssignment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GateAssignment)
}
GateAssignment::GateAssignment(const GateAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.GateAssignment)
}

void GateAssignment::SharedCtor() {
}

GateAssignment::~GateAssignment() {
  // @@protoc_insertion_point(destructor:pb.GateAssignment)
  SharedDtor();
}

void GateAssignment::SharedDtor() {
}

void GateAssignment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateAssignment::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateAssignment& GateAssignment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_GateAssignment.base);
  return *internal_default_instance();
}


void GateAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GateAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GateAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GateAssignment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GateAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GateAssignment)
  return false;
#undef DO_
}

void GateAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GateAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GateAssignment)
}

::google::protobuf::uint8* GateAssignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GateAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GateAssignment)
  return target;
}

size_t GateAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GateAssignment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GateAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const GateAssignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateAssignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GateAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GateAssignment)
    MergeFrom(*source);
  }
}

void GateAssignment::MergeFrom(const GateAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GateAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GateAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GateAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateAssignment::CopyFrom(const GateAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GateAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateAssignment::IsInitialized() const {
  return true;
}

void GateAssignment::Swap(GateAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateAssignment::InternalSwap(GateAssignment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateAssignment::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Airport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Airport::kGatesFieldNumber;
const int Airport::kBridgeNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Airport::Airport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_Airport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Airport)
}
Airport::Airport(const Airport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gates_(from.gates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bridgenum_ = from.bridgenum_;
  // @@protoc_insertion_point(copy_constructor:pb.Airport)
}

void Airport::SharedCtor() {
  bridgenum_ = 0;
}

Airport::~Airport() {
  // @@protoc_insertion_point(destructor:pb.Airport)
  SharedDtor();
}

void Airport::SharedDtor() {
}

void Airport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Airport::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Airport& Airport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_Airport.base);
  return *internal_default_instance();
}


void Airport::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Airport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gates_.Clear();
  bridgenum_ = 0;
  _internal_metadata_.Clear();
}

bool Airport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Airport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Gate gates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bridgeNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bridgenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Airport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Airport)
  return false;
#undef DO_
}

void Airport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Airport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Gate gates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->gates(static_cast<int>(i)),
      output);
  }

  // int32 bridgeNum = 2;
  if (this->bridgenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bridgenum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Airport)
}

::google::protobuf::uint8* Airport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Airport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.Gate gates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->gates(static_cast<int>(i)), deterministic, target);
  }

  // int32 bridgeNum = 2;
  if (this->bridgenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bridgenum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Airport)
  return target;
}

size_t Airport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Airport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.Gate gates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gates(static_cast<int>(i)));
    }
  }

  // int32 bridgeNum = 2;
  if (this->bridgenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bridgenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Airport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Airport)
  GOOGLE_DCHECK_NE(&from, this);
  const Airport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Airport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Airport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Airport)
    MergeFrom(*source);
  }
}

void Airport::MergeFrom(const Airport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Airport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gates_.MergeFrom(from.gates_);
  if (from.bridgenum() != 0) {
    set_bridgenum(from.bridgenum());
  }
}

void Airport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Airport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Airport::CopyFrom(const Airport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Airport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Airport::IsInitialized() const {
  return true;
}

void Airport::Swap(Airport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Airport::InternalSwap(Airport* other) {
  using std::swap;
  CastToBase(&gates_)->InternalSwap(CastToBase(&other->gates_));
  swap(bridgenum_, other->bridgenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Airport::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Gate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gate::kIdFieldNumber;
const int Gate::kMinGapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gate::Gate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_Gate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Gate)
}
Gate::Gate(const Gate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mingap_) -
    reinterpret_cast<char*>(&id_)) + sizeof(mingap_));
  // @@protoc_insertion_point(copy_constructor:pb.Gate)
}

void Gate::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mingap_) -
      reinterpret_cast<char*>(&id_)) + sizeof(mingap_));
}

Gate::~Gate() {
  // @@protoc_insertion_point(destructor:pb.Gate)
  SharedDtor();
}

void Gate::SharedDtor() {
}

void Gate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Gate::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gate& Gate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_Gate.base);
  return *internal_default_instance();
}


void Gate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mingap_) -
      reinterpret_cast<char*>(&id_)) + sizeof(mingap_));
  _internal_metadata_.Clear();
}

bool Gate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Gate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minGap = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mingap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Gate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Gate)
  return false;
#undef DO_
}

void Gate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 minGap = 2;
  if (this->mingap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mingap(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Gate)
}

::google::protobuf::uint8* Gate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 minGap = 2;
  if (this->mingap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mingap(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Gate)
  return target;
}

size_t Gate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Gate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 minGap = 2;
  if (this->mingap() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mingap());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Gate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Gate)
  GOOGLE_DCHECK_NE(&from, this);
  const Gate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Gate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Gate)
    MergeFrom(*source);
  }
}

void Gate::MergeFrom(const Gate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Gate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.mingap() != 0) {
    set_mingap(from.mingap());
  }
}

void Gate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gate::CopyFrom(const Gate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gate::IsInitialized() const {
  return true;
}

void Gate::Swap(Gate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gate::InternalSwap(Gate* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(mingap_, other->mingap_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Gate::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Flight::InitAsDefaultInstance() {
  ::pb::_Flight_default_instance_._instance.get_mutable()->turnaround_ = const_cast< ::pb::Interval*>(
      ::pb::Interval::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Flight::kIdFieldNumber;
const int Flight::kTurnaroundFieldNumber;
const int Flight::kIncompatibleGatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Flight::Flight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_Flight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Flight)
}
Flight::Flight(const Flight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      incompatiblegates_(from.incompatiblegates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_turnaround()) {
    turnaround_ = new ::pb::Interval(*from.turnaround_);
  } else {
    turnaround_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.Flight)
}

void Flight::SharedCtor() {
  ::memset(&turnaround_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&turnaround_)) + sizeof(id_));
}

Flight::~Flight() {
  // @@protoc_insertion_point(destructor:pb.Flight)
  SharedDtor();
}

void Flight::SharedDtor() {
  if (this != internal_default_instance()) delete turnaround_;
}

void Flight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Flight::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Flight& Flight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_Flight.base);
  return *internal_default_instance();
}


void Flight::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Flight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  incompatiblegates_.Clear();
  if (GetArenaNoVirtual() == NULL && turnaround_ != NULL) {
    delete turnaround_;
  }
  turnaround_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Flight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Flight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Interval turnaround = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_turnaround()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 incompatibleGates = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_incompatiblegates())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_incompatiblegates())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Flight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Flight)
  return false;
#undef DO_
}

void Flight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Flight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .pb.Interval turnaround = 2;
  if (this->has_turnaround()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_turnaround(), output);
  }

  // repeated int32 incompatibleGates = 3;
  if (this->incompatiblegates_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _incompatiblegates_cached_byte_size_));
  }
  for (int i = 0, n = this->incompatiblegates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->incompatiblegates(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Flight)
}

::google::protobuf::uint8* Flight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Flight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .pb.Interval turnaround = 2;
  if (this->has_turnaround()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_turnaround(), deterministic, target);
  }

  // repeated int32 incompatibleGates = 3;
  if (this->incompatiblegates_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _incompatiblegates_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->incompatiblegates_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Flight)
  return target;
}

size_t Flight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Flight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 incompatibleGates = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->incompatiblegates_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _incompatiblegates_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .pb.Interval turnaround = 2;
  if (this->has_turnaround()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *turnaround_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Flight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Flight)
  GOOGLE_DCHECK_NE(&from, this);
  const Flight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Flight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Flight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Flight)
    MergeFrom(*source);
  }
}

void Flight::MergeFrom(const Flight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Flight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  incompatiblegates_.MergeFrom(from.incompatiblegates_);
  if (from.has_turnaround()) {
    mutable_turnaround()->::pb::Interval::MergeFrom(from.turnaround());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Flight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Flight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Flight::CopyFrom(const Flight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Flight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Flight::IsInitialized() const {
  return true;
}

void Flight::Swap(Flight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Flight::InternalSwap(Flight* other) {
  using std::swap;
  incompatiblegates_.InternalSwap(&other->incompatiblegates_);
  swap(turnaround_, other->turnaround_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Flight::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Interval::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Interval::kBeginFieldNumber;
const int Interval::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Interval::Interval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_Interval.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Interval)
}
Interval::Interval(const Interval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&begin_, &from.begin_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:pb.Interval)
}

void Interval::SharedCtor() {
  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(end_));
}

Interval::~Interval() {
  // @@protoc_insertion_point(destructor:pb.Interval)
  SharedDtor();
}

void Interval::SharedDtor() {
}

void Interval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Interval::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Interval& Interval::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_Interval.base);
  return *internal_default_instance();
}


void Interval::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  _internal_metadata_.Clear();
}

bool Interval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Interval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 begin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Interval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Interval)
  return false;
#undef DO_
}

void Interval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 begin = 1;
  if (this->begin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->begin(), output);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Interval)
}

::google::protobuf::uint8* Interval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 begin = 1;
  if (this->begin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->begin(), target);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Interval)
  return target;
}

size_t Interval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Interval)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 begin = 1;
  if (this->begin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->begin());
  }

  // int32 end = 2;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Interval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Interval)
  GOOGLE_DCHECK_NE(&from, this);
  const Interval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Interval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Interval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Interval)
    MergeFrom(*source);
  }
}

void Interval::MergeFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Interval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begin() != 0) {
    set_begin(from.begin());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
}

void Interval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interval::CopyFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interval::IsInitialized() const {
  return true;
}

void Interval::Swap(Interval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Interval::InternalSwap(Interval* other) {
  using std::swap;
  swap(begin_, other->begin_);
  swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Interval::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Submission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Submission::kAuthorFieldNumber;
const int Submission::kAlgorithmFieldNumber;
const int Submission::kThreadFieldNumber;
const int Submission::kCpuFieldNumber;
const int Submission::kRamFieldNumber;
const int Submission::kLanguageFieldNumber;
const int Submission::kCompilerFieldNumber;
const int Submission::kOsFieldNumber;
const int Submission::kProblemFieldNumber;
const int Submission::kInstanceFieldNumber;
const int Submission::kDurationFieldNumber;
const int Submission::kObjFieldNumber;
const int Submission::kEmailFieldNumber;
const int Submission::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Submission::Submission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAssignment_2eproto::scc_info_Submission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Submission)
}
Submission::Submission(const Submission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.algorithm().size() > 0) {
    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thread().size() > 0) {
    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpu().size() > 0) {
    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ram().size() > 0) {
    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compiler().size() > 0) {
    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.os().size() > 0) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.problem().size() > 0) {
    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance().size() > 0) {
    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  obj_ = from.obj_;
  // @@protoc_insertion_point(copy_constructor:pb.Submission)
}

void Submission::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
}

Submission::~Submission() {
  // @@protoc_insertion_point(destructor:pb.Submission)
  SharedDtor();
}

void Submission::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Submission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Submission::descriptor() {
  ::protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Submission& Submission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAssignment_2eproto::scc_info_Submission.base);
  return *internal_default_instance();
}


void Submission::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
  _internal_metadata_.Clear();
}

bool Submission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Submission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string algorithm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm().data(), static_cast<int>(this->algorithm().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.algorithm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thread()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thread().data(), static_cast<int>(this->thread().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.thread"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpu = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpu().data(), static_cast<int>(this->cpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.cpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ram = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram().data(), static_cast<int>(this->ram().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.ram"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compiler = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compiler()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compiler().data(), static_cast<int>(this->compiler().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.compiler"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string os = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.os"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string problem = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_problem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->problem().data(), static_cast<int>(this->problem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.problem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance().data(), static_cast<int>(this->instance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.instance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Submission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Submission)
  return false;
#undef DO_
}

void Submission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.algorithm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->algorithm(), output);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.thread");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thread(), output);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.cpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cpu(), output);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.ram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ram(), output);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->language(), output);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.compiler");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->compiler(), output);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->os(), output);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->problem(), output);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->instance(), output);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->duration(), output);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->obj(), output);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->email(), output);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Submission)
}

::google::protobuf::uint8* Submission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.algorithm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->algorithm(), target);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.thread");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thread(), target);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.cpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cpu(), target);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.ram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ram(), target);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->language(), target);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.compiler");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->compiler(), target);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->os(), target);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->problem(), target);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->instance(), target);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->duration(), target);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->obj(), target);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->email(), target);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->date(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Submission)
  return target;
}

size_t Submission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Submission)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithm());
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thread());
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpu());
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram());
  }

  // string language = 6;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiler());
  }

  // string os = 8;
  if (this->os().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->os());
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->problem());
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance());
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  // string email = 32;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string date = 33;
  if (this->date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // double obj = 31;
  if (this->obj() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Submission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  const Submission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Submission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Submission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Submission)
    MergeFrom(*source);
  }
}

void Submission::MergeFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.algorithm().size() > 0) {

    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  if (from.thread().size() > 0) {

    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  if (from.cpu().size() > 0) {

    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  if (from.ram().size() > 0) {

    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.compiler().size() > 0) {

    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  if (from.os().size() > 0) {

    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  if (from.problem().size() > 0) {

    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  if (from.instance().size() > 0) {

    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.obj() != 0) {
    set_obj(from.obj());
  }
}

void Submission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Submission::CopyFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Submission::IsInitialized() const {
  return true;
}

void Submission::Swap(Submission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Submission::InternalSwap(Submission* other) {
  using std::swap;
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  algorithm_.Swap(&other->algorithm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thread_.Swap(&other->thread_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_.Swap(&other->cpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ram_.Swap(&other->ram_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  compiler_.Swap(&other->compiler_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  problem_.Swap(&other->problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_.Swap(&other->instance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_, other->obj_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Submission::GetMetadata() const {
  protobuf_GateAssignment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAssignment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GateAssignment_Input* Arena::CreateMaybeMessage< ::pb::GateAssignment_Input >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GateAssignment_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GateAssignment_Output* Arena::CreateMaybeMessage< ::pb::GateAssignment_Output >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GateAssignment_Output >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GateAssignment* Arena::CreateMaybeMessage< ::pb::GateAssignment >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GateAssignment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Airport* Arena::CreateMaybeMessage< ::pb::Airport >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Airport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Gate* Arena::CreateMaybeMessage< ::pb::Gate >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Gate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Flight* Arena::CreateMaybeMessage< ::pb::Flight >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Flight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Interval* Arena::CreateMaybeMessage< ::pb::Interval >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Interval >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Submission* Arena::CreateMaybeMessage< ::pb::Submission >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Submission >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
